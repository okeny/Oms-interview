// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api/building/service.go

// Package mock_building is a generated GoMock package.
package building

import (
	building "building_management/interfaces/api/building"
	models "building_management/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateOrUpdateBuilding mocks base method.
func (m *MockServiceInterface) CreateOrUpdateBuilding(ctx context.Context, building building.BuildingRequest) (*models.Building, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateBuilding", ctx, building)
	ret0, _ := ret[0].(*models.Building)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrUpdateBuilding indicates an expected call of CreateOrUpdateBuilding.
func (mr *MockServiceInterfaceMockRecorder) CreateOrUpdateBuilding(ctx, building interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateBuilding", reflect.TypeOf((*MockServiceInterface)(nil).CreateOrUpdateBuilding), ctx, building)
}

// DeleteBuilding mocks base method.
func (m *MockServiceInterface) DeleteBuilding(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBuilding", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBuilding indicates an expected call of DeleteBuilding.
func (mr *MockServiceInterfaceMockRecorder) DeleteBuilding(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBuilding", reflect.TypeOf((*MockServiceInterface)(nil).DeleteBuilding), ctx, id)
}

// GetBuildingByID mocks base method.
func (m *MockServiceInterface) GetBuildingByID(ctx context.Context, id int) (*models.Building, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildingByID", ctx, id)
	ret0, _ := ret[0].(*models.Building)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuildingByID indicates an expected call of GetBuildingByID.
func (mr *MockServiceInterfaceMockRecorder) GetBuildingByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildingByID", reflect.TypeOf((*MockServiceInterface)(nil).GetBuildingByID), ctx, id)
}

// GetBuildings mocks base method.
func (m *MockServiceInterface) GetBuildings(ctx context.Context) (models.BuildingSlice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuildings", ctx)
	ret0, _ := ret[0].(models.BuildingSlice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBuildings indicates an expected call of GetBuildings.
func (mr *MockServiceInterfaceMockRecorder) GetBuildings(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuildings", reflect.TypeOf((*MockServiceInterface)(nil).GetBuildings), ctx)
}
