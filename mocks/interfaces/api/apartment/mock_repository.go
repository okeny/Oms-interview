// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api/apartment/repository.go

// Package mock_apartment is a generated GoMock package.
package apartment

import (
	models "building_management/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositoryInterface is a mock of RepositoryInterface interface.
type MockRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryInterfaceMockRecorder
}

// MockRepositoryInterfaceMockRecorder is the mock recorder for MockRepositoryInterface.
type MockRepositoryInterfaceMockRecorder struct {
	mock *MockRepositoryInterface
}

// NewMockRepositoryInterface creates a new mock instance.
func NewMockRepositoryInterface(ctrl *gomock.Controller) *MockRepositoryInterface {
	mock := &MockRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryInterface) EXPECT() *MockRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateOrUpdateApartment mocks base method.
func (m *MockRepositoryInterface) CreateOrUpdateApartment(ctx context.Context, apartment models.Apartment) (*models.Apartment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateApartment", ctx, apartment)
	ret0, _ := ret[0].(*models.Apartment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrUpdateApartment indicates an expected call of CreateOrUpdateApartment.
func (mr *MockRepositoryInterfaceMockRecorder) CreateOrUpdateApartment(ctx, apartment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateApartment", reflect.TypeOf((*MockRepositoryInterface)(nil).CreateOrUpdateApartment), ctx, apartment)
}

// DeleteApartment mocks base method.
func (m *MockRepositoryInterface) DeleteApartment(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteApartment", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteApartment indicates an expected call of DeleteApartment.
func (mr *MockRepositoryInterfaceMockRecorder) DeleteApartment(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteApartment", reflect.TypeOf((*MockRepositoryInterface)(nil).DeleteApartment), ctx, id)
}

// GetApartmentByID mocks base method.
func (m *MockRepositoryInterface) GetApartmentByID(ctx context.Context, ID int) (*models.Apartment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApartmentByID", ctx, ID)
	ret0, _ := ret[0].(*models.Apartment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApartmentByID indicates an expected call of GetApartmentByID.
func (mr *MockRepositoryInterfaceMockRecorder) GetApartmentByID(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApartmentByID", reflect.TypeOf((*MockRepositoryInterface)(nil).GetApartmentByID), ctx, ID)
}

// GetApartments mocks base method.
func (m *MockRepositoryInterface) GetApartments(ctx context.Context) (models.ApartmentSlice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApartments", ctx)
	ret0, _ := ret[0].(models.ApartmentSlice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApartments indicates an expected call of GetApartments.
func (mr *MockRepositoryInterfaceMockRecorder) GetApartments(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApartments", reflect.TypeOf((*MockRepositoryInterface)(nil).GetApartments), ctx)
}

// GetApartmentsByBuilding mocks base method.
func (m *MockRepositoryInterface) GetApartmentsByBuilding(ctx context.Context, buildingID int) (models.ApartmentSlice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApartmentsByBuilding", ctx, buildingID)
	ret0, _ := ret[0].(models.ApartmentSlice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApartmentsByBuilding indicates an expected call of GetApartmentsByBuilding.
func (mr *MockRepositoryInterfaceMockRecorder) GetApartmentsByBuilding(ctx, buildingID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApartmentsByBuilding", reflect.TypeOf((*MockRepositoryInterface)(nil).GetApartmentsByBuilding), ctx, buildingID)
}
